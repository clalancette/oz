.TH OZ-CUSTOMIZE 1 "Dec 2010" "oz-customize"

.SH NAME
oz-customize - tool to automatically modify installed operating system files

.SH SYNOPSIS
.B oz-customize [OPTIONS] <tdl-file> <libvirt-xml-file>

.SH DESCRIPTION
This is a tool to modify already installed operating systems.
Modifications typically involve installing additional packages.  This
program can be used as a counterpart to oz-install, though it does not
have to be used in conjunction.

Note that oz-customize does the actual customization using a combination
of KVM and libvirt, so both of these must be available (and working)
for oz-customize to have a chance to succeed.

.SH OPTIONS
.TP
.B "\-c <config>"
Get the configuration from config file \fBconfig\fR, instead of the
default /etc/oz/oz.cfg.  If neither one exists, Oz will use sensible
defaults.  The config file is in standard ini format; for an
explanation of the sections and keys, see the
.B CONFIGURATION FILE
section.
.TP
.B "\-d <loglevel>"
Turn on debugging output to level \fBloglevel\fR.  The log levels are:
.RS 7
.IP "0 - errors only (this is the default)"
.IP "1 - errors and warnings"
.IP "2 - errors, warnings, and information"
.IP "3 - all messages"
.IP "4 - all messages, prepended with the level and classname"
.RE
.TP
.B "\-h"
Print a short help message.

.SH CONFIGURATION FILE
The Oz configuration file is in standard INI format with several
sections.  If any section or configuration key is missing, Oz will use
a sensible default.  For true/false configuration keys, the values of
"true", "True", "yes", or "Yes" can be used to turn the option on, and
"false", "False", "no", or "No" can be used to turn the behavior off.
The configuration file should have the following form:

.sp
.in +4n
.nf
[paths]
output_dir = /var/lib/libvirt/images
data_dir = /var/lib/oz
screenshot_dir = .
sshprivkey = /etc/oz/id_rsa-icicle-gen

[libvirt]
uri = qemu:///system
type = kvm
bridge_name = virbr0
cpus = 1
memory = 1024
image_type = raw

[cache]
original_media = yes
modified_media = no
jeos = no

[icicle]
safe_generation = no
.fi
.in

The \fBpaths\fR section defines the paths that Oz will use for storing data.
The \fBoutput_dir\fR key describes where to store the images after they are
built, and the \fBdata_dir\fR key describes where to cache install media and
use temporary storage.  Both locations must have a decent amount of
free disk space in order for Oz to work properly.
The \fBscreenshot_dir\fR key describes where to store screenshots of
failed installs. The \fBsshprivkey\fR key describes where the ssh keys are
stored, they are required by Oz depending on the guest operating system.

The \fBlibvirt\fR section allows some manipulation of how Oz uses libvirt.
The \fBuri\fR key describes the libvirt URI to use to do the guest
installation.  The \fBtype\fR key defines what type of virtualization
to use.  The \fBbridge_name\fR key defines which bridge Oz should
place the guests that it launches on.  The \fBcpus\fR key defines how
many cpus should be used inside the virtual machine.  The \fBmemory\fR
key defines how much memory (in megabytes) should be used inside the
virtual machine.  The \fBimage_type\fR key defines which output disk
type should be used; this can be any value that libvirt supports.

The \fBcache\fR section allows some manipulation of how Oz caches
data.  The caching of data in Oz is a tradeoff between installation
time and storage space.  The \fBoriginal_media\fR key tells Oz
to cache the original installation media so that it does not have to
download it the next time an install for the same operating system is
requested.  The \fBmodified_media\fR key tells Oz to cache the
oz-modified installation media so that it does not have to download
and modify it the next time an install for the same operating system
is requested.  The \fBjeos\fR key tells Oz to cache the installed
operating system after installation.  This can significantly speed up
subsequent installation of the same operating system, with the
additional downside of the operating system getting out-of-date with
respect to security updates.  Use with care.

The \fBicicle\fR section allows some manipulation of how Oz generates
ICICLE output.  ICICLE is a package manifest that can optionally be
generated at the end of installs.  The \fBsafe_generation\fR key
controls whether Oz uses a throwaway overlay file while generating
the ICICLE.  If it is set to "no" (the default), then Oz will boot
up the guest at the end of the install and run the appropriate
commands to generate the ICICLE.  If it is set to "yes", then Oz
will use a throwaway overlay file while generating the ICICLE.  After
the ICICLE is generated, Oz will delete the backing file, leaving
the original disk image pristine.

.SH SEE ALSO
oz-generate-icicle(1), oz-install(1), oz-cleanup-cache(1), oz-examples(1)

.SH AUTHOR
Chris Lalancette <clalancette@gmail.com>
